"""add_sku_price_stock_to_products

Revision ID: a04176727d8f
Revises: 020158dd6d92
Create Date: 2025-10-19 17:24:27.425156

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a04176727d8f'
down_revision = '020158dd6d92'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Add columns as nullable first to handle existing products
    op.add_column('products', sa.Column('sku_code', sa.String(length=50), nullable=True))
    op.add_column('products', sa.Column('price', sa.Float(), nullable=True))
    op.add_column('products', sa.Column('stock_quantity', sa.Integer(), nullable=True))
    
    # Set default values for existing products
    op.execute("""
        UPDATE products 
        SET 
            sku_code = 'SKU-' || id,
            price = 0.0,
            stock_quantity = 0
        WHERE sku_code IS NULL
    """)
    
    # Now make columns non-nullable
    op.alter_column('products', 'sku_code', nullable=False)
    op.alter_column('products', 'price', nullable=False)
    op.alter_column('products', 'stock_quantity', nullable=False)
    
    # Create unique index
    op.create_index(op.f('ix_products_sku_code'), 'products', ['sku_code'], unique=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_products_sku_code'), table_name='products')
    op.drop_column('products', 'stock_quantity')
    op.drop_column('products', 'price')
    op.drop_column('products', 'sku_code')
    op.create_table('banners',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('subtitle', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('image_url', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('mobile_image_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('banner_type', postgresql.ENUM('hero', 'promo', 'category', name='bannertype'), autoincrement=False, nullable=False),
    sa.Column('cta_text', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('cta_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('display_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('start_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('end_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='banners_pkey')
    )
    op.create_index('ix_banners_is_active', 'banners', ['is_active'], unique=False)
    op.create_index('ix_banners_id', 'banners', ['id'], unique=False)
    op.create_index('ix_banners_banner_type', 'banners', ['banner_type'], unique=False)
    # ### end Alembic commands ###