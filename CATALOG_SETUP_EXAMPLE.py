"""
Catalog Setup Example - Creating the complete catalog structure
This demonstrates how to set up categories, subcategories, brands, and products
to match the catalog design from the Marque website.
"""

from src.app_01.db import SessionLocal
from src.app_01.models import (
    Category, Subcategory, Brand, Product, SKU, ProductAsset, ProductAttribute
)
from datetime import datetime

def create_catalog_structure():
    """Create the complete catalog structure matching the design"""
    db = SessionLocal()
    
    try:
        print("üèóÔ∏è Creating Marque Catalog Structure...")
        
        # 1. Create Main Categories (–ú—É–∂—á–∏–Ω–∞–º, –ñ–µ–Ω—â–∏–Ω–∞–º, –î–µ—Ç—è–º, etc.)
        print("\nüìÇ Creating Main Categories...")
        
        categories = [
            Category(
                name="–ú—É–∂—á–∏–Ω–∞–º",
                slug="men",
                description="–û–¥–µ–∂–¥–∞ –¥–ª—è –º—É–∂—á–∏–Ω",
                icon="fa-solid fa-mars",
                sort_order=1
            ),
            Category(
                name="–ñ–µ–Ω—â–∏–Ω–∞–º", 
                slug="women",
                description="–û–¥–µ–∂–¥–∞ –¥–ª—è –∂–µ–Ω—â–∏–Ω",
                icon="fa-solid fa-venus",
                sort_order=2
            ),
            Category(
                name="–î–µ—Ç—è–º",
                slug="kids",
                description="–î–µ—Ç—Å–∫–∞—è –æ–¥–µ–∂–¥–∞",
                icon="fa-solid fa-child",
                sort_order=3
            ),
            Category(
                name="–°–ø–æ—Ä—Ç",
                slug="sport",
                description="–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –æ–¥–µ–∂–¥–∞",
                icon="fa-solid fa-dumbbell",
                sort_order=4
            ),
            Category(
                name="–û–±—É–≤—å",
                slug="shoes",
                description="–û–±—É–≤—å –¥–ª—è –≤—Å–µ—Ö",
                icon="fa-solid fa-shoe-prints",
                sort_order=5
            ),
            Category(
                name="–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã",
                slug="accessories",
                description="–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã –∏ —É–∫—Ä–∞—à–µ–Ω–∏—è",
                icon="fa-solid fa-gem",
                sort_order=6
            ),
            Category(
                name="–ë—Ä–µ–Ω–¥—ã",
                slug="brands",
                description="–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –±—Ä–µ–Ω–¥—ã",
                icon="fa-solid fa-star",
                sort_order=7
            )
        ]
        
        db.add_all(categories)
        db.commit()
        for category in categories:
            db.refresh(category)
        
        print(f"‚úÖ Created {len(categories)} main categories")
        
        # 2. Create Subcategories for "–ú—É–∂—á–∏–Ω–∞–º" (Men)
        print("\nüëî Creating Subcategories for Men...")
        
        men_category = categories[0]  # –ú—É–∂—á–∏–Ω–∞–º
        men_subcategories = [
            Subcategory(
                category_id=men_category.id,
                name="–§—É—Ç–±–æ–ª–∫–∏ –∏ –ø–æ–ª–æ",
                slug="t-shirts-polos",
                description="–§—É—Ç–±–æ–ª–∫–∏ –∏ –ø–æ–ª–æ –¥–ª—è –º—É–∂—á–∏–Ω",
                image_url="https://example.com/images/men-t-shirts.jpg",
                sort_order=1
            ),
            Subcategory(
                category_id=men_category.id,
                name="–°–≤–∏—Ç—à–æ—Ç—ã –∏ —Ö—É–¥–∏",
                slug="sweatshirts-hoodies", 
                description="–°–≤–∏—Ç—à–æ—Ç—ã –∏ —Ö—É–¥–∏ –¥–ª—è –º—É–∂—á–∏–Ω",
                image_url="https://example.com/images/men-sweatshirts.jpg",
                sort_order=2
            ),
            Subcategory(
                category_id=men_category.id,
                name="–ë—Ä—é–∫–∏ –∏ —à–æ—Ä—Ç—ã",
                slug="pants-shorts",
                description="–ë—Ä—é–∫–∏ –∏ —à–æ—Ä—Ç—ã –¥–ª—è –º—É–∂—á–∏–Ω",
                image_url="https://example.com/images/men-pants.jpg",
                sort_order=3
            ),
            Subcategory(
                category_id=men_category.id,
                name="–í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞",
                slug="outerwear",
                description="–ö—É—Ä—Ç–∫–∏ –∏ –ø–∞–ª—å—Ç–æ –¥–ª—è –º—É–∂—á–∏–Ω",
                image_url="https://example.com/images/men-jackets.jpg",
                sort_order=4
            ),
            Subcategory(
                category_id=men_category.id,
                name="–ù–∏–∂–Ω–µ–µ –±–µ–ª—å—ë",
                slug="underwear",
                description="–ù–∏–∂–Ω–µ–µ –±–µ–ª—å—ë –¥–ª—è –º—É–∂—á–∏–Ω",
                image_url="https://example.com/images/men-underwear.jpg",
                sort_order=5
            ),
            Subcategory(
                category_id=men_category.id,
                name="–†—É–±–∞—à–∫–∏",
                slug="shirts",
                description="–†—É–±–∞—à–∫–∏ –¥–ª—è –º—É–∂—á–∏–Ω",
                image_url="https://example.com/images/men-shirts.jpg",
                sort_order=6
            ),
            Subcategory(
                category_id=men_category.id,
                name="–î–∂–∏–Ω—Å—ã",
                slug="jeans",
                description="–î–∂–∏–Ω—Å—ã –¥–ª—è –º—É–∂—á–∏–Ω",
                image_url="https://example.com/images/men-jeans.jpg",
                sort_order=7
            ),
            Subcategory(
                category_id=men_category.id,
                name="–ö–æ—Å—Ç—é–º—ã –∏ –ø–∏–¥–∂–∞–∫–∏",
                slug="suits-jackets",
                description="–ö–æ—Å—Ç—é–º—ã –∏ –ø–∏–¥–∂–∞–∫–∏ –¥–ª—è –º—É–∂—á–∏–Ω",
                image_url="https://example.com/images/men-suits.jpg",
                sort_order=8
            ),
            Subcategory(
                category_id=men_category.id,
                name="–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –æ–¥–µ–∂–¥–∞",
                slug="sportswear",
                description="–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –æ–¥–µ–∂–¥–∞ –¥–ª—è –º—É–∂—á–∏–Ω",
                image_url="https://example.com/images/men-sportswear.jpg",
                sort_order=9
            ),
            Subcategory(
                category_id=men_category.id,
                name="–î–æ–º–∞—à–Ω—è—è –æ–¥–µ–∂–¥–∞",
                slug="homewear",
                description="–î–æ–º–∞—à–Ω—è—è –æ–¥–µ–∂–¥–∞ –¥–ª—è –º—É–∂—á–∏–Ω",
                image_url="https://example.com/images/men-homewear.jpg",
                sort_order=10
            )
        ]
        
        db.add_all(men_subcategories)
        db.commit()
        for subcategory in men_subcategories:
            db.refresh(subcategory)
        
        print(f"‚úÖ Created {len(men_subcategories)} subcategories for Men")
        
        # 3. Create Brands
        print("\nüè∑Ô∏è Creating Brands...")
        
        brands = [
            Brand(
                name="H&M",
                slug="hm",
                description="–®–≤–µ–¥—Å–∫–∏–π –±—Ä–µ–Ω–¥ –º–æ–¥–Ω–æ–π –æ–¥–µ–∂–¥—ã",
                country="Sweden",
                sort_order=1
            ),
            Brand(
                name="Zara",
                slug="zara", 
                description="–ò—Å–ø–∞–Ω—Å–∫–∏–π –±—Ä–µ–Ω–¥ –±—ã—Å—Ç—Ä–æ–π –º–æ–¥—ã",
                country="Spain",
                sort_order=2
            ),
            Brand(
                name="Nike",
                slug="nike",
                description="–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –±—Ä–µ–Ω–¥",
                country="USA",
                sort_order=3
            ),
            Brand(
                name="Adidas",
                slug="adidas",
                description="–ù–µ–º–µ—Ü–∫–∏–π —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –±—Ä–µ–Ω–¥",
                country="Germany",
                sort_order=4
            ),
            Brand(
                name="Uniqlo",
                slug="uniqlo",
                description="–Ø–ø–æ–Ω—Å–∫–∏–π –±—Ä–µ–Ω–¥ –±–∞–∑–æ–≤–æ–π –æ–¥–µ–∂–¥—ã",
                country="Japan",
                sort_order=5
            ),
            Brand(
                name="Levi's",
                slug="levis",
                description="–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π –±—Ä–µ–Ω–¥ –¥–∂–∏–Ω—Å–æ–≤",
                country="USA",
                sort_order=6
            )
        ]
        
        db.add_all(brands)
        db.commit()
        for brand in brands:
            db.refresh(brand)
        
        print(f"‚úÖ Created {len(brands)} brands")
        
        # 4. Create Product Attributes (Sizes, Colors)
        print("\nüìè Creating Product Attributes...")
        
        # Sizes
        sizes = [
            ProductAttribute(attribute_type="size", attribute_value="RUS 40", display_name="RUS 40", sort_order=1),
            ProductAttribute(attribute_type="size", attribute_value="RUS 42", display_name="RUS 42", sort_order=2),
            ProductAttribute(attribute_type="size", attribute_value="RUS 44", display_name="RUS 44", sort_order=3),
            ProductAttribute(attribute_type="size", attribute_value="RUS 46", display_name="RUS 46", sort_order=4),
            ProductAttribute(attribute_type="size", attribute_value="RUS 48", display_name="RUS 48", sort_order=5),
            ProductAttribute(attribute_type="size", attribute_value="RUS 50", display_name="RUS 50", sort_order=6)
        ]
        
        # Colors
        colors = [
            ProductAttribute(attribute_type="color", attribute_value="black", display_name="–ß–µ—Ä–Ω—ã–π", sort_order=1),
            ProductAttribute(attribute_type="color", attribute_value="white", display_name="–ë–µ–ª—ã–π", sort_order=2),
            ProductAttribute(attribute_type="color", attribute_value="red", display_name="–ö—Ä–∞—Å–Ω—ã–π", sort_order=3),
            ProductAttribute(attribute_type="color", attribute_value="blue", display_name="–°–∏–Ω–∏–π", sort_order=4),
            ProductAttribute(attribute_type="color", attribute_value="green", display_name="–ó–µ–ª–µ–Ω—ã–π", sort_order=5),
            ProductAttribute(attribute_type="color", attribute_value="gray", display_name="–°–µ—Ä—ã–π", sort_order=6),
            ProductAttribute(attribute_type="color", attribute_value="brown", display_name="–ö–æ—Ä–∏—á–Ω–µ–≤—ã–π", sort_order=7)
        ]
        
        db.add_all(sizes + colors)
        db.commit()
        
        print(f"‚úÖ Created {len(sizes)} sizes and {len(colors)} colors")
        
        # 5. Create Sample Products
        print("\nüõçÔ∏è Creating Sample Products...")
        
        tshirts_subcategory = men_subcategories[0]  # –§—É—Ç–±–æ–ª–∫–∏ –∏ –ø–æ–ª–æ
        hm_brand = brands[0]  # H&M
        
        products = [
            Product(
                brand_id=hm_brand.id,
                category_id=men_category.id,
                subcategory_id=tshirts_subcategory.id,
                title="–§—É—Ç–±–æ–ª–∫–∞ —Å–ø–æ—Ä—Ç. –∏–∑ —Ö–ª–æ–ø–∫–∞",
                slug="hm-sport-cotton-tshirt",
                description="–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞ –∏–∑ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ö–ª–æ–ø–∫–∞. –£–¥–æ–±–Ω–∞—è –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω–∞—è –¥–ª—è –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –Ω–æ—Å–∫–∏.",
                is_featured=True,
                attributes={
                    "gender": "–ú—É–∂—Å–∫–æ–π",
                    "season": "–ú—É–ª—å—Ç–∏",
                    "composition": "66% –ø–æ–ª–∏—ç—Å—Ç–µ—Ä, 34% —Ö–ª–æ–ø–æ–∫",
                    "article": "236412"
                }
            ),
            Product(
                brand_id=hm_brand.id,
                category_id=men_category.id,
                subcategory_id=tshirts_subcategory.id,
                title="–§—É—Ç–±–æ–ª–∫–∞ –±–∞–∑–æ–≤–∞—è –±–µ–ª–∞—è",
                slug="hm-basic-white-tshirt",
                description="–ë–∞–∑–æ–≤–∞—è –±–µ–ª–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞ –∏–∑ 100% —Ö–ª–æ–ø–∫–∞. –ò–¥–µ–∞–ª—å–Ω–∞ –¥–ª—è –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –Ω–æ—Å–∫–∏.",
                is_featured=False,
                attributes={
                    "gender": "–ú—É–∂—Å–∫–æ–π",
                    "season": "–ú—É–ª—å—Ç–∏", 
                    "composition": "100% —Ö–ª–æ–ø–æ–∫",
                    "article": "236413"
                }
            )
        ]
        
        db.add_all(products)
        db.commit()
        for product in products:
            db.refresh(product)
        
        # 6. Create SKUs for products
        print("\nüè∑Ô∏è Creating SKUs...")
        
        skus = [
            # First product SKUs
            SKU(
                product_id=products[0].id,
                sku_code="–ê—Ä—Ç–∏–∫—É–ª/236412-BLK-40",
                size="RUS 40",
                color="black",
                price=2999.0,
                stock=15
            ),
            SKU(
                product_id=products[0].id,
                sku_code="–ê—Ä—Ç–∏–∫—É–ª/236412-BLK-42",
                size="RUS 42",
                color="black", 
                price=2999.0,
                stock=12
            ),
            SKU(
                product_id=products[0].id,
                sku_code="–ê—Ä—Ç–∏–∫—É–ª/236412-WHT-40",
                size="RUS 40",
                color="white",
                price=2999.0,
                stock=8
            ),
            # Second product SKUs
            SKU(
                product_id=products[1].id,
                sku_code="–ê—Ä—Ç–∏–∫—É–ª/236413-WHT-42",
                size="RUS 42",
                color="white",
                price=2499.0,
                stock=20
            ),
            SKU(
                product_id=products[1].id,
                sku_code="–ê—Ä—Ç–∏–∫—É–ª/236413-WHT-44",
                size="RUS 44",
                color="white",
                price=2499.0,
                stock=18
            )
        ]
        
        db.add_all(skus)
        db.commit()
        
        print(f"‚úÖ Created {len(skus)} SKUs")
        
        # 7. Create Product Assets
        print("\nüñºÔ∏è Creating Product Assets...")
        
        assets = [
            ProductAsset(
                product_id=products[0].id,
                url="https://example.com/images/hm-sport-tshirt-main.jpg",
                type="image",
                alt_text="H&M —Å–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞ - –æ—Å–Ω–æ–≤–Ω–æ–π –≤–∏–¥",
                order=1
            ),
            ProductAsset(
                product_id=products[0].id,
                url="https://example.com/images/hm-sport-tshirt-side.jpg",
                type="image", 
                alt_text="H&M —Å–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞ - –±–æ–∫–æ–≤–æ–π –≤–∏–¥",
                order=2
            ),
            ProductAsset(
                product_id=products[1].id,
                url="https://example.com/images/hm-basic-tshirt-main.jpg",
                type="image",
                alt_text="H&M –±–∞–∑–æ–≤–∞—è –±–µ–ª–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞",
                order=1
            )
        ]
        
        db.add_all(assets)
        db.commit()
        
        print(f"‚úÖ Created {len(assets)} product assets")
        
        print("\nüéâ Catalog structure created successfully!")
        print("\nüìä Summary:")
        print(f"   - {len(categories)} main categories")
        print(f"   - {len(men_subcategories)} subcategories for Men")
        print(f"   - {len(brands)} brands")
        print(f"   - {len(sizes + colors)} product attributes")
        print(f"   - {len(products)} sample products")
        print(f"   - {len(skus)} product SKUs")
        print(f"   - {len(assets)} product assets")
        
        return True
        
    except Exception as e:
        db.rollback()
        print(f"‚ùå Error creating catalog structure: {e}")
        return False
    finally:
        db.close()

def show_catalog_usage():
    """Show how to use the catalog structure"""
    print("\nüåê CATALOG STRUCTURE USAGE")
    print("=" * 50)
    print()
    print("üìÇ Main Categories:")
    print("   üëî –ú—É–∂—á–∏–Ω–∞–º (men)")
    print("   üëó –ñ–µ–Ω—â–∏–Ω–∞–º (women)")
    print("   üë∂ –î–µ—Ç—è–º (kids)")
    print("   üèÉ –°–ø–æ—Ä—Ç (sport)")
    print("   üëü –û–±—É–≤—å (shoes)")
    print("   üíé –ê–∫—Å–µ—Å—Å—É–∞—Ä—ã (accessories)")
    print("   ‚≠ê –ë—Ä–µ–Ω–¥—ã (brands)")
    print()
    print("üëî Men's Subcategories:")
    print("   üìù –§—É—Ç–±–æ–ª–∫–∏ –∏ –ø–æ–ª–æ (t-shirts-polos)")
    print("   üß• –°–≤–∏—Ç—à–æ—Ç—ã –∏ —Ö—É–¥–∏ (sweatshirts-hoodies)")
    print("   üëñ –ë—Ä—é–∫–∏ –∏ —à–æ—Ä—Ç—ã (pants-shorts)")
    print("   üß• –í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞ (outerwear)")
    print("   ü©≤ –ù–∏–∂–Ω–µ–µ –±–µ–ª—å—ë (underwear)")
    print("   üëî –†—É–±–∞—à–∫–∏ (shirts)")
    print("   üëñ –î–∂–∏–Ω—Å—ã (jeans)")
    print("   ü§µ –ö–æ—Å—Ç—é–º—ã –∏ –ø–∏–¥–∂–∞–∫–∏ (suits-jackets)")
    print("   üèÉ –°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –æ–¥–µ–∂–¥–∞ (sportswear)")
    print("   üè† –î–æ–º–∞—à–Ω—è—è –æ–¥–µ–∂–¥–∞ (homewear)")
    print()
    print("üè∑Ô∏è Popular Brands:")
    print("   üõçÔ∏è H&M (Sweden)")
    print("   üõçÔ∏è Zara (Spain)")
    print("   üëü Nike (USA)")
    print("   üëü Adidas (Germany)")
    print("   üëï Uniqlo (Japan)")
    print("   üëñ Levi's (USA)")
    print()
    print("üìè Available Sizes: RUS 40, 42, 44, 46, 48, 50")
    print("üé® Available Colors: –ß–µ—Ä–Ω—ã–π, –ë–µ–ª—ã–π, –ö—Ä–∞—Å–Ω—ã–π, –°–∏–Ω–∏–π, –ó–µ–ª–µ–Ω—ã–π, –°–µ—Ä—ã–π, –ö–æ—Ä–∏—á–Ω–µ–≤—ã–π")
    print()
    print("üöÄ How to Access SQLAdmin:")
    print("   1. Run: python main_admin.py")
    print("   2. Visit: http://localhost:8001/admin")
    print("   3. Login: content_admin / admin123")
    print("   4. Manage: –ö–∞—Ç–µ–≥–æ—Ä–∏–∏, –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –ë—Ä–µ–Ω–¥—ã, –¢–æ–≤–∞—Ä—ã")

def main():
    """Main function"""
    print("üèóÔ∏è MARQUE CATALOG SETUP")
    print("=" * 40)
    
    if create_catalog_structure():
        show_catalog_usage()
        print("\n‚úÖ Catalog setup completed successfully!")
        print("   Now you can run: python main_admin.py")
        print("   Then visit: http://localhost:8001/admin")
    else:
        print("\n‚ùå Catalog setup failed. Please check the error messages above.")

if __name__ == "__main__":
    main()
