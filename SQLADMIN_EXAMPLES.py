"""
SQLAdmin Examples for Website Content Management
This file demonstrates how to use the SQLAdmin interface for managing website content.
"""

from src.app_01.db import SessionLocal
from src.app_01.models import (
    Product, SKU, ProductAsset, ProductAttribute, Review, User,
    Admin, AdminLog
)
from datetime import datetime

def create_sample_data():
    """Create sample data for testing the SQLAdmin interface"""
    db = SessionLocal()
    
    try:
        print("üöÄ Creating sample data for SQLAdmin interface...")
        
        # 1. Create a user
        user = User(
            email="content.admin@marque.com",
            username="content_admin",
            hashed_password="hashed_password_here",
            full_name="–ê–π–≥–µ—Ä–∏–º –°—ã–¥—ã–∫–æ–≤–∞",
            is_active=True,
            is_verified=True
        )
        db.add(user)
        db.commit()
        db.refresh(user)
        
        # 2. Create admin
        admin = Admin(
            user_id=user.id,
            admin_role="website_content"
        )
        admin.setup_default_permissions()
        db.add(admin)
        db.commit()
        db.refresh(admin)
        
        # 3. Admin created successfully
        
        # 4. Create product attributes
        sizes = [
            ProductAttribute(
                attribute_type="size",
                attribute_value="RUS 40",
                display_name="RUS 40",
                sort_order=1,
                created_by_admin_id=admin.id
            ),
            ProductAttribute(
                attribute_type="size",
                attribute_value="RUS 42",
                display_name="RUS 42",
                sort_order=2,
                created_by_admin_id=admin.id
            ),
            ProductAttribute(
                attribute_type="size",
                attribute_value="RUS 44",
                display_name="RUS 44",
                sort_order=3,
                created_by_admin_id=admin.id
            ),
            ProductAttribute(
                attribute_type="size",
                attribute_value="RUS 46",
                display_name="RUS 46",
                sort_order=4,
                created_by_admin_id=admin.id
            )
        ]
        
        colors = [
            ProductAttribute(
                attribute_type="color",
                attribute_value="black",
                display_name="–ß–µ—Ä–Ω—ã–π",
                sort_order=1,
                created_by_admin_id=admin.id
            ),
            ProductAttribute(
                attribute_type="color",
                attribute_value="white",
                display_name="–ë–µ–ª—ã–π",
                sort_order=2,
                created_by_admin_id=admin.id
            ),
            ProductAttribute(
                attribute_type="color",
                attribute_value="red",
                display_name="–ö—Ä–∞—Å–Ω—ã–π",
                sort_order=3,
                created_by_admin_id=admin.id
            )
        ]
        
        brands = [
            ProductAttribute(
                attribute_type="brand",
                attribute_value="H&M",
                display_name="H&M",
                sort_order=1,
                created_by_admin_id=admin.id
            ),
            ProductAttribute(
                attribute_type="brand",
                attribute_value="Zara",
                display_name="Zara",
                sort_order=2,
                created_by_admin_id=admin.id
            )
        ]
        
        db.add_all(sizes + colors + brands)
        db.commit()
        
        # 5. Create products
        products = [
            Product(
                brand="H&M",
                title="–§—É—Ç–±–æ–ª–∫–∞ —Å–ø–æ—Ä—Ç. –∏–∑ —Ö–ª–æ–ø–∫–∞",
                slug="hm-sport-cotton-tshirt",
                description="–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞ –∏–∑ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ö–ª–æ–ø–∫–∞. –£–¥–æ–±–Ω–∞—è –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω–∞—è –¥–ª—è –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –Ω–æ—Å–∫–∏.",
                sold_count=120,
                rating_avg=4.4,
                rating_count=32,
                attributes={
                    "gender": "–ú—É–∂—Å–∫–æ–π/–ñ–µ–Ω—Å–∫–∏–π",
                    "season": "–ú—É–ª—å—Ç–∏",
                    "composition": "66% –ø–æ–ª–∏—ç—Å—Ç–µ—Ä, 34% —Ö–ª–æ–ø–æ–∫",
                    "article": "236412"
                }
            ),
            Product(
                brand="Zara",
                title="–î–∂–∏–Ω—Å—ã –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ",
                slug="zara-classic-jeans",
                description="–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –¥–∂–∏–Ω—Å—ã –∏–∑ –¥–µ–Ω–∏–º–∞. –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –ª—é–±–æ–≥–æ —Å—Ç–∏–ª—è.",
                sold_count=85,
                rating_avg=4.2,
                rating_count=28,
                attributes={
                    "gender": "–ú—É–∂—Å–∫–æ–π",
                    "season": "–ú—É–ª—å—Ç–∏",
                    "composition": "98% —Ö–ª–æ–ø–æ–∫, 2% —ç–ª–∞—Å—Ç–∞–Ω",
                    "article": "789123"
                }
            )
        ]
        
        db.add_all(products)
        db.commit()
        db.refresh(products[0])
        db.refresh(products[1])
        
        # 6. Create SKUs for products
        skus = [
            # H&M T-shirt SKUs
            SKU(
                product_id=products[0].id,
                sku_code="–ê—Ä—Ç–∏–∫—É–ª/236412-BLK-40",
                size="RUS 40",
                color="black",
                price=2999.0,
                stock=15
            ),
            SKU(
                product_id=products[0].id,
                sku_code="–ê—Ä—Ç–∏–∫—É–ª/236412-BLK-42",
                size="RUS 42",
                color="black",
                price=2999.0,
                stock=12
            ),
            SKU(
                product_id=products[0].id,
                sku_code="–ê—Ä—Ç–∏–∫—É–ª/236412-WHT-40",
                size="RUS 40",
                color="white",
                price=2999.0,
                stock=8
            ),
            # Zara Jeans SKUs
            SKU(
                product_id=products[1].id,
                sku_code="–ê—Ä—Ç–∏–∫—É–ª/789123-BLU-42",
                size="RUS 42",
                color="blue",
                price=4500.0,
                stock=10
            ),
            SKU(
                product_id=products[1].id,
                sku_code="–ê—Ä—Ç–∏–∫—É–ª/789123-BLU-44",
                size="RUS 44",
                color="blue",
                price=4500.0,
                stock=7
            )
        ]
        
        db.add_all(skus)
        db.commit()
        
        # 7. Create product assets
        assets = [
            ProductAsset(
                product_id=products[0].id,
                url="https://example.com/images/hm-tshirt-main.jpg",
                type="image",
                alt_text="H&M —Å–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞ - –æ—Å–Ω–æ–≤–Ω–æ–π –≤–∏–¥",
                order=1
            ),
            ProductAsset(
                product_id=products[0].id,
                url="https://example.com/images/hm-tshirt-side.jpg",
                type="image",
                alt_text="H&M —Å–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞ - –±–æ–∫–æ–≤–æ–π –≤–∏–¥",
                order=2
            ),
            ProductAsset(
                product_id=products[1].id,
                url="https://example.com/images/zara-jeans-main.jpg",
                type="image",
                alt_text="Zara –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –¥–∂–∏–Ω—Å—ã - –æ—Å–Ω–æ–≤–Ω–æ–π –≤–∏–¥",
                order=1
            )
        ]
        
        db.add_all(assets)
        db.commit()
        
        # 8. Create reviews
        reviews = [
            Review(
                product_id=products[0].id,
                user_id=user.id,
                rating=5,
                text="–û—Ç–ª–∏—á–Ω–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞! –ö–∞—á–µ—Å—Ç–≤–æ —Ö–æ—Ä–æ—à–µ–µ, —Ä–∞–∑–º–µ—Ä —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç. –û—á–µ–Ω—å –¥–æ–≤–æ–ª—å–Ω–∞ –ø–æ–∫—É–ø–∫–æ–π."
            ),
            Review(
                product_id=products[0].id,
                user_id=user.id,
                rating=4,
                text="–•–æ—Ä–æ—à–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞, –Ω–æ –Ω–µ–º–Ω–æ–≥–æ –º–∞–ª–∞. –†–µ–∫–æ–º–µ–Ω–¥—É—é –≤–∑—è—Ç—å —Ä–∞–∑–º–µ—Ä –ø–æ–±–æ–ª—å—à–µ."
            ),
            Review(
                product_id=products[1].id,
                user_id=user.id,
                rating=5,
                text="–û—Ç–ª–∏—á–Ω—ã–µ –¥–∂–∏–Ω—Å—ã! –°–∏–¥—è—Ç –∏–¥–µ–∞–ª—å–Ω–æ, –∫–∞—á–µ—Å—Ç–≤–æ –Ω–∞ –≤—ã—Å–æ—Ç–µ. –†–µ–∫–æ–º–µ–Ω–¥—É—é!"
            )
        ]
        
        db.add_all(reviews)
        db.commit()
        
        # 9. Create admin log entries
        admin_logs = [
            AdminLog(
                admin_id=admin.id,
                action="create",
                entity_type="product",
                entity_id=products[0].id,
                description=f"–°–æ–∑–¥–∞–Ω —Ç–æ–≤–∞—Ä: {products[0].title}",
                ip_address="192.168.1.1"
            ),
            AdminLog(
                admin_id=admin.id,
                action="create",
                entity_type="product",
                entity_id=products[1].id,
                description=f"–°–æ–∑–¥–∞–Ω —Ç–æ–≤–∞—Ä: {products[1].title}",
                ip_address="192.168.1.1"
            ),
            AdminLog(
                admin_id=admin.id,
                action="create",
                entity_type="attribute",
                entity_id=sizes[0].id,
                description=f"–î–æ–±–∞–≤–ª–µ–Ω —Ä–∞–∑–º–µ—Ä: {sizes[0].attribute_value}",
                ip_address="192.168.1.1"
            )
        ]
        
        db.add_all(admin_logs)
        db.commit()
        
        print("‚úÖ Sample data created successfully!")
        print(f"   - Created user: {user.full_name}")
        print(f"   - Created admin: {admin.role_display_name}")
        print(f"   - Created {len(products)} products")
        print(f"   - Created {len(skus)} SKUs")
        print(f"   - Created {len(assets)} assets")
        print(f"   - Created {len(reviews)} reviews")
        print(f"   - Created {len(sizes + colors + brands)} attributes")
        print(f"   - Created {len(admin_logs)} admin log entries")
        
        return True
        
    except Exception as e:
        db.rollback()
        print(f"‚ùå Error creating sample data: {e}")
        return False
    finally:
        db.close()

def show_sqladmin_usage():
    """Show how to use the SQLAdmin interface"""
    print("\nüåê SQLADMIN WEBSITE CONTENT ADMIN INTERFACE")
    print("=" * 60)
    print()
    print("üìã Available Admin Sections:")
    print("   üõçÔ∏è  –¢–æ–≤–∞—Ä—ã (Products)")
    print("      - –°–æ–∑–¥–∞–Ω–∏–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤")
    print("      - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—Ä–µ–Ω–¥–∞–º–∏, –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏, –æ–ø–∏—Å–∞–Ω–∏—è–º–∏")
    print("      - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞—Ç—Ä–∏–±—É—Ç–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤")
    print()
    print("   üè∑Ô∏è  –ê—Ä—Ç–∏–∫—É–ª—ã (SKUs)")
    print("      - –°–æ–∑–¥–∞–Ω–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤")
    print("      - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏ —Ü–≤–µ—Ç–∞–º–∏")
    print("      - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–µ–Ω –∏ –æ—Å—Ç–∞—Ç–∫–æ–≤")
    print()
    print("   üñºÔ∏è  –ú–µ–¥–∏–∞ —Ñ–∞–π–ª—ã (Product Assets)")
    print("      - –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤")
    print("      - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º")
    print("      - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ—Ä—è–¥–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è")
    print()
    print("   üìù –ê—Ç—Ä–∏–±—É—Ç—ã —Ç–æ–≤–∞—Ä–æ–≤ (Product Attributes)")
    print("      - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞–º–∏ (RUS 40, 42, 44, 46)")
    print("      - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞–º–∏ (—á–µ—Ä–Ω—ã–π, –±–µ–ª—ã–π, –∫—Ä–∞—Å–Ω—ã–π)")
    print("      - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—Ä–µ–Ω–¥–∞–º–∏ (H&M, Zara)")
    print("      - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏")
    print()
    print("   ‚≠ê –û—Ç–∑—ã–≤—ã (Reviews)")
    print("      - –ú–æ–¥–µ—Ä–∞—Ü–∏—è –æ—Ç–∑—ã–≤–æ–≤ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π")
    print("      - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏ —Ç–æ–≤–∞—Ä–æ–≤")
    print("      - –û–¥–æ–±—Ä–µ–Ω–∏–µ/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤")
    print()
    print("   üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (Users)")
    print("      - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
    print("      - –ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ—Ñ–∏–ª–µ–π")
    print("      - –ê–∫—Ç–∏–≤–∞—Ü–∏—è/–¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
    print()
    print("   üìä –ñ—É—Ä–Ω–∞–ª –¥–µ–π—Å—Ç–≤–∏–π (Admin Log)")
    print("      - –ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏ –¥–µ–π—Å—Ç–≤–∏–π")
    print("      - –ê—É–¥–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π")
    print("      - –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
    print()
    print("üöÄ How to Access SQLAdmin Interface:")
    print("   1. Install dependencies: pip install -r requirements.txt")
    print("   2. Create sample data: python SQLADMIN_EXAMPLES.py")
    print("   3. Run admin interface: python main_admin.py")
    print("   4. Open browser: http://localhost:8001/admin")
    print("   5. Login: username='content_admin', password='admin123'")
    print()
    print("üîß Key Features:")
    print("   ‚úÖ –†—É—Å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")
    print("   ‚úÖ –ö—Ä–∞—Å–∏–≤—ã–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω")
    print("   ‚úÖ –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è")
    print("   ‚úÖ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∫–æ–ª–æ–Ω–∫–∞–º")
    print("   ‚úÖ –ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏")
    print("   ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö")
    print("   ‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è")
    print("   ‚úÖ –ê—É–¥–∏—Ç –¥–µ–π—Å—Ç–≤–∏–π")
    print()
    print("üì± Perfect for Website Content Management:")
    print("   - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤")
    print("   - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏ —Ü–≤–µ—Ç–∞–º–∏")
    print("   - –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    print("   - –ú–æ–¥–µ—Ä–∞—Ü–∏—è –æ—Ç–∑—ã–≤–æ–≤")
    print("   - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–æ–º")

def main():
    """Main function"""
    print("üöÄ MARQUE SQLADMIN SETUP")
    print("=" * 40)
    
    # Create sample data
    if create_sample_data():
        # Show usage information
        show_sqladmin_usage()
        
        print("\n‚úÖ Setup completed successfully!")
        print("   Now you can run: python main_admin.py")
        print("   Then visit: http://localhost:8001/admin")
    else:
        print("\n‚ùå Setup failed. Please check the error messages above.")

if __name__ == "__main__":
    main()
